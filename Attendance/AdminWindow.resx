<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>